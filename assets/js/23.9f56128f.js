(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{373:function(a,s,e){"use strict";e.r(s);var t=e(42),r=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[a._v("#")]),a._v(" Docker")]),a._v(" "),e("h3",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[a._v("#")]),a._v(" 安装")]),a._v(" "),e("h4",{attrs:{id:"wsl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#wsl"}},[a._v("#")]),a._v(" WSL")]),a._v(" "),e("p",[e("code",[a._v("windows")]),a._v("系统下安装Docker需要几个前置条件，首先"),e("code",[a._v("windows")]),a._v("版本需要大于"),e("code",[a._v("v1903")]),a._v("，并且我们需要启用"),e("code",[a._v("Window Subsystem Linux(WSL2)")]),a._v("，可以根据微软的"),e("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/windows/wsl/install-win10",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方指南"),e("OutboundLink")],1),a._v("进行环境的安装。")]),a._v(" "),e("p",[a._v("安装好"),e("code",[a._v("WSL")]),a._v("后我们可以在终端通过输入"),e("code",[a._v("wsl")]),a._v("来切换成对应的Linux发行版。")]),a._v(" "),e("p",[a._v("搭建好基础环境之后我们就可以直接安装"),e("code",[a._v("Docker desktop")]),a._v("软件，安装好"),e("code",[a._v("Docker")]),a._v("后我们就可以在终端使用"),e("code",[a._v("Docker")]),a._v("命令，或者是借助"),e("code",[a._v("Docker desktop")]),a._v("桌面应用来直接执行各种操作，本博客重点介绍命令行下的操作。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker version "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 验证安装成功")]),a._v("\n")])])]),e("blockquote",[e("p",[a._v("最好修改一下镜像源来加速镜像的获取")])]),a._v(" "),e("h3",{attrs:{id:"基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[a._v("#")]),a._v(" 基础")]),a._v(" "),e("p",[a._v("使用"),e("code",[a._v("Docker")]),a._v("时，我们通常会使用他人的镜像"),e("code",[a._v("image")]),a._v("或自己打包的"),e("code",[a._v("image")]),a._v("在容器"),e("code",[a._v("container")]),a._v("中运行。")]),a._v(" "),e("h4",{attrs:{id:"image"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#image"}},[a._v("#")]),a._v(" image")]),a._v(" "),e("blockquote",[e("p",[a._v("部分命令可以省略image一词")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 本地所有镜像")]),a._v("\ndocker image "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除镜像")]),a._v("\ndocker image pull akara/my-image "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# akara/my-image为组名/镜像名")]),a._v("\ndocker image pull hello-world "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 如果不指定组名，则默认拉取library组内的镜像（官方镜像）")]),a._v("\n")])])]),e("h4",{attrs:{id:"container"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#container"}},[a._v("#")]),a._v(" container")]),a._v(" "),e("blockquote",[e("p",[a._v("部分命令可以省略container一词")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker container "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看正在运行中的容器。或者 docker ps")]),a._v("\ndocker container "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" --all "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看所有的容器，包括没有运行的容器。或者 docker ps -a")]),a._v("\n")])])]),e("p",[a._v("当我们本地存在镜像"),e("code",[a._v("image")]),a._v("，就可以运行在容器中了。通常情况运行完成后，容器会"),e("strong",[a._v("自动退出运行")]),a._v("状态。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker container run hello-world "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行容器，如果本地不存在该镜像，则会自动拉取远程镜像")]),a._v("\n")])])]),e("p",[a._v("我们可以在运行容器的时候加上"),e("code",[a._v("-it")]),a._v("标识，实现"),e("strong",[a._v("通过终端访问容器内部")]),a._v("，在退出终端后容器会"),e("strong",[a._v("退出运行")]),a._v("。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker container run -it hello-world /bin/bash "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 选择/bin/bash作为shell")]),a._v("\n")])])]),e("p",[a._v("我们可以通过"),e("code",[a._v("-d")]),a._v("搭配"),e("code",[a._v("-it")]),a._v("使用，"),e("code",[a._v("-d")]),a._v("的作用是让容器在后台运行，从而实现类似守护进程的效果。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker run -p "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8000")]),a._v(":3000 -itd  koa-demo  /bin/bash\n")])])]),e("p",[a._v("当容器在后台运行时，我们可以使用"),e("code",[a._v("docker attach")]),a._v("或"),e("code",[a._v("docker exec")]),a._v("来进入容器，通常推荐使用"),e("code",[a._v("docker exec")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" -it "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("containerID"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" /bin/bash\n")])])]),e("hr"),a._v(" "),e("p",[a._v("很多时候我们的容器内部都跑着HTTP服务器，通常是无法被外部直接访问的，为此我们需要实现主机和容器之间的"),e("strong",[a._v("端口映射")]),a._v("。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker container run -p "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8000")]),a._v(":3000 -it hello-world /bin/bash\n")])])]),e("p",[a._v("像这里我们使用"),e("code",[a._v("-p 8000:3000")]),a._v("实现了端口映射，可以通过本机的8000端口访问目标容器的3000端口。除了"),e("code",[a._v("-p")]),a._v("我们还可以使用"),e("code",[a._v("-P")]),a._v("来实现随机端口映射。")]),a._v(" "),e("hr"),a._v(" "),e("p",[a._v("我们也可以手动退出容器。")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker container stop "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("containerID"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 优雅的退出")]),a._v("\ndocker container "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("kill")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("containerID"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 粗暴的退出")]),a._v("\n\ndocker container start "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("containerID"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 启动容器")]),a._v("\n")])])]),e("p",[a._v("无论是容器自动运行结束，还是我们手动退出容器，容器本身还是占据着硬盘空间，我们可以使用"),e("code",[a._v("rm")]),a._v("命令彻底删除容器")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker container "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("containerID"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n")])])]),e("h3",{attrs:{id:"打包镜像"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#打包镜像"}},[a._v("#")]),a._v(" 打包镜像")]),a._v(" "),e("p",[a._v("通过编写"),e("code",[a._v("Dockerfile")]),a._v("我们可以实现将本地项目打包成"),e("code",[a._v("Docker")]),a._v("镜像"),e("code",[a._v("image")]),a._v("，从而提供给他人运行在容器"),e("code",[a._v("container")]),a._v("当中。")]),a._v(" "),e("p",[a._v("通常使用"),e("code",[a._v(".dockerignore")]),a._v("文件指出哪些文件不要被打包进镜像当中。")]),a._v(" "),e("div",{staticClass:"language-markdown extra-class"},[e("pre",{pre:!0,attrs:{class:"language-markdown"}},[e("code",[a._v(".git\nnode_modules\n")])])]),e("h4",{attrs:{id:"dockerfile"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[a._v("#")]),a._v(" Dockerfile")]),a._v(" "),e("div",{staticClass:"language-dockerfile extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Dockerfile")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("8.4 "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 新镜像基于node镜像")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COPY")]),a._v(" . /app "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 将当前目录文件都复制进镜像的/app文件夹下")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /app "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定工作目录为/app")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" npm install "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("registry=https"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//registry.npm.taobao.org \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXPOSE")]),a._v(" 3000 "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 容器暴露的端口")]),a._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" node app.js "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 容器启动后执行的操作")]),a._v("\n")])])]),e("blockquote",[e("p",[a._v("如果我们使用"),e("code",[a._v("docker run -it xxx /bin/bash")]),a._v("，则"),e("code",[a._v("CMD")]),a._v("命令不会执行。使用"),e("code",[a._v("docker run -it xxx")]),a._v("的话，会执行"),e("code",[a._v("CMD")]),a._v("的命令。")])]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("docker image build -t "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("image_name"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 构建镜像，通过-t指定镜像名")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);